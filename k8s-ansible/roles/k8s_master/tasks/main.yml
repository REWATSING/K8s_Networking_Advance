---
- name: Kubernetes Master Node Setup
  hosts: master
  become: true
  tasks:

    - name: Disable swap immediately
      command: swapoff -a

    - name: Comment out swap in fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#].* swap .*)$'
        replace: '# \1'

    - name: Load required kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Ensure kernel modules are loaded on boot
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: Set required sysctl params
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1

    - name: Apply sysctl params
      command: sysctl --system

    - name: Install containerd
      apt:
        name: containerd
        state: present
        update_cache: true

    - name: Create containerd config directory
      file:
        path: /etc/containerd
        state: directory
        mode: 0755

    - name: Generate default containerd config
      shell: containerd config default > /etc/containerd/config.toml
      args:
        creates: /etc/containerd/config.toml

    - name: Set systemd cgroup driver in containerd config
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'

    - name: Restart and enable containerd
      systemd:
        name: containerd
        enabled: true
        state: restarted

    - name: Remove old Kubernetes repo
      file:
        path: /etc/apt/sources.list.d/kubernetes.list
        state: absent

    - name: Create apt keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: 0755

    - name: Add Kubernetes GPG key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        mode: '0644'

    - name: Add Kubernetes APT repository
      copy:
        dest: /etc/apt/sources.list.d/kubernetes.list
        content: |
          deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /

    - name: Install kubelet, kubeadm, kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: true

    - name: Hold kubelet, kubeadm, kubectl versions
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: hold

    - name: Enable kubelet service
      systemd:
        name: kubelet
        enabled: true
        state: started

    - name: Print success message
      debug:
        msg: "âœ… Kubernetes prerequisites setup complete"

    - name: Initialize Kubernetes master with kubeadm
      command: kubeadm init --pod-network-cidr=192.168.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Set up kubeconfig for ubuntu user
      shell: |
        mkdir -p /home/ubuntu/.kube
        cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
        chown ubuntu:ubuntu /home/ubuntu/.kube/config

    - name: Install Calico CNI
      become_user: ubuntu
      shell: |
        kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/calico.yaml

    - name: Get kubeadm join command
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Save join command to file (for debug/logging)
      copy:
        content: "{{ join_command.stdout }}"
        dest: /tmp/kubeadm_join.sh
        mode: '0755'

    - name: Set join command fact
      set_fact:
        worker_join_cmd: "{{ join_command.stdout }}"

